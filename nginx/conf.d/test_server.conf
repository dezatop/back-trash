user  nginx;
worker_processes  auto;

#error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;


events {
    worker_connections  4096;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    '$status $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  /var/log/nginx/access.log  main;
    keepalive_timeout  65;
    sendfile       on;
    tcp_nopush     on;
    resolver_timeout 10s;
    server_tokens off;
    reset_timedout_connection on;
    client_body_timeout 30;
    send_timeout 30;
    server_names_hash_bucket_size 128;
    proxy_buffers 4 1024k;
    proxy_buffer_size 512k;
    proxy_busy_buffers_size 1024k;

    gzip on;
    gzip_comp_level 9;
    gzip_disable "msie6";
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript image/svg+xml;

#    resolver 127.0.0.11;

    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    server {
        listen 80;
        listen 443 ssl http2;
        ssl_certificate /etc/letsencrypt/live/harbormoore.cf/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/harbormoore.cf/privkey.pem;

        ssl_protocols TLSv1.2;
        ssl_ciphers "HIGH:!RC4:!aNULL:!MD5:!kEDH";
        add_header Strict-Transport-Security 'max-age=604800';

        server_name harbormoore.cf;
        root /www/react/build;
        index index.html;

        if ($server_port = 80) { set $https_redirect 1; }

        if ($https_redirect = 1) { return 301 https://$server_name$request_uri; }
	    client_max_body_size 2400M;
        gzip_static on;



        location /.well-known/acme-challenge/ { root /var/www/certbot; }

        location ^~ /api {
            proxy_pass http://back:3000/api;
            proxy_set_header Host $host;
            proxy_http_version 1.1;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Real-IP $remote_addr;
        }

        location ~* \.io {
            proxy_pass http://back:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'Upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        location / {
            try_files $uri /index.html;
        }

        location  /storage {
                    alias /www/back/uploads/static;
                    expires 30d;
                }
    }
}
